# Clusters 정의
clusters = source, target

# Source Cluster 설정
source.bootstrap.servers = 172.31.0.4:29092
source.security.protocol = PLAINTEXT

# Target Cluster 설정
target.bootstrap.servers = 43.203.246.245:29092
target.security.protocol = PLAINTEXT

# Replication 설정
source->target.enabled = true
# source->target.topics = home, container-logs
source->target.topics = *
# target->source.enabled = false  # 양방향 복제 시 활성화

replication.factor = 1
tasks.max = 1

# Replication Flow
# replication.factor = 2
# checkpoints.topic.replication.factor = 2
# heartbeats.topic.replication.factor = 2
# offset-syncs.topic.replication.factor = 2
# offset.storage.replication.factor = 2
# status.storage.replication.factor = 2
# config.storage.replication.factor = 2

# # Topic 이름 변환 (선택)
# replication.policy.class = org.apache.kafka.connect.mirror.DefaultReplicationPolicy
# # 또는
# # replication.policy.class = org.apache.kafka.connect.mirror.IdentityReplicationPolicy

# # 성능 튜닝
# tasks.max = 2
# groups = .*
# groups.exclude = console-consumer-.*, connect-.*, __.*

# # Consumer 설정
# consumer.auto.offset.reset = earliest
# consumer.max.poll.records = 500

# # Producer 설정
# producer.compression.type = lz4
# producer.batch.size = 16384
# producer.linger.ms = 10

# # Sync 설정
# sync.topic.configs.enabled = true
# sync.topic.acls.enabled = false
# emit.heartbeats.enabled = true
# emit.checkpoints.enabled = true
# emit.checkpoints.interval.seconds = 60
# refresh.topics.enabled = true
# refresh.topics.interval.seconds = 300
# refresh.groups.enabled = true
# refresh.groups.interval.seconds = 300